Веб-приложение написано на React.

Все файлы приложения находяться в папке src.

Папке src содержит:

1. components - папка со всеми компонентами.
2. components/... - каждый компонент представляется отдельной папкой, в которой находится 2 файла: 1. Непосредственно файл с кодом компонента. 2. Файл со стилями компонента.
3. helpers - тут находяться файлы с разными вспомогательными функциями, которые можно импортировать в нужные компоненты.
4. pages - тут находяться компоненты страниц, которые рендерятся при переходе на соответствующие роуты.
5. pages/... - каждый компонент страницы представляется отдельной папкой, в которой находится 2 файла: 1. Непосредственно файл с кодом компонента страницы. 2. Файл со стилями компонента страницы.
6. services - тут находиться разные вспомогательные сервисы, в часности файл для взяимодествие с API.
7. index.js - точка входа в приложение.

Корневым файлом является App.jsx. Он обернут в React Router для возможности переходить по роутам.

Всего в приложении есть 4 роута:
1. HomePage.
2. AddFilmPage.
3. FilmDetailsPage.
4. NotFoundPage.
Первые три роута подгружаются как отдельный бандл. Для этого используется React lazy.

В App.jsx происходит подгрузка всех бандлов и определение path для каждого роута. При переходе на несуществующий path рендерится NotFoundPage. При загрузке бандлов использовал Suspense, во время загрузки отображается Loader. Также в App.jsx рендериться навигация для всего приложения. При нажатии на кнопку навигации рендерится компонент с соответствующим роутом.

Корневым роутом является HomePage. Когда компонент HomePage замаунтился, происходит запрос на сервер, в ответ сервер возвращает массив с объектами фильмов, который мы закидываем в стейт. Далее этот массив прокидывается пропом в компонент FilmList, который выводит список с названием фильмов и кнопкой для удаления. При нажатии на кнопку удаления, отправляется запрос на сервер, который удаляет фильм из базы данных. В ответ с сервера приходит список оставшихся фильмов. Обновлённый список устанавливается в стейт вместо старого. При нажатии кнопки для сортировки по имени фильма происходит запрос на сервер, который возращает массив с объектами фильмов, после чего происходит их сортировка по имени. После того, как сортировка закончилась, отсотрированный массив устанавливается в стейт вместо массива фильмов, который был там ранее, после чего происходит ререндер. При нажатии на кнопку сортировки по умолчанию, проиходит такой же запрос на сервер, как при окончании маунта HomePage. При поиске по имени либо по актёру, значение, введённое пользователем устанавливается в стейт, после чего происходит поиск совпадений в массиве объектов. Результат отправляется в отдельную переменную, которая после прокидывается пропом в компонент FilmList. При нажатии в списке фильмов на название фильма происходит переход на роут film/:id.

На роуте films/:id когда компонент замаунтился, при помощи вспомогательной функции вычисляется id фильма, после чего отправляется запрос на сервер, в теле запроса на сервер указывается  вычисленный id. В ответ получаем объект с информацией о фильме. Этот объект устанавливается в стейт. После, этот объект прокидывается пропом в компонент AboutFilm, который ренедерит разметку и добавляет информацию о фильме. Также на этой странице есть две кнопки: для возврата к списку фильмов и для удаления фильма. Кнопка для удаления фильма действует аналогичным образом, как и в HomePage. После нажатия на обе кнопки, мы переходим обратно на HomePage.

На роуте films/ мы можем добавить новый фильм. Для этого сделана форма. При вводе каких либо значений в форме, эти значения записываются в соответствующие поля в стейте. При нажатии на кнопку добавить, происходит добавление всех значений в один объект, после чего этот объект отправляется в теле запроса на сервер. После отправление запроса заполненные поля очищаются, и можно заново добавлять новый фильм.


