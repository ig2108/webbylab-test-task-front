{"version":3,"sources":["../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","pages/AddFilmPage/AddFilmPage.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","pages/AddFilmPage/AddFilmPage.jsx","components/Button/Button.jsx","components/Button/Button.module.css","services/filmsApi.jsx","../node_modules/shortid/lib/alphabet.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"names":["module","exports","require","alphabet","build","isValid","clusterWorkerId","generate","seed","seedValue","worker","workerId","characters","newCharacters","undefined","shuffled","nextValue","_seed_","counter","previousSeconds","str","seconds","Math","floor","Date","now","random","format","number","done","loopCounter","get","pow","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","i","push","mask","log","length","LN2","step","id","RegExp","replace","test","_arrayLikeToArray","arr","len","arr2","Array","_toConsumableArray","isArray","iter","Symbol","iterator","Object","from","o","minLen","n","prototype","toString","call","slice","constructor","name","TypeError","AddFilmPage","state","title","releaseYear","stars","filmToAdd","filmsList","titleInputId","shortid","releaseYearInputId","starsInputId","formatInputId","handleSubmit","e","preventDefault","formatStars","split","validateForm","setState","NotificationManager","error","handleChange","target","value","addNewFilmInDb","film","filmsApi","catch","err","console","setFilmsToState","isFilmDuplicateByYearOrActors","filmsArray","year","actorsArray","matchedFilmObjByReleaseYear","findFilmByReleaseYear","matchedFilmsByActors","findFilmsByActors","find","matchedFilms","actor","includes","resetState","checkArrayConsistOfUniqueElements","uniqueArray","Set","this","setFilmsFromDbToState","starsArray","validationResultYear","validateReleaseYear","validationResultActors","validateStarsList","validationResultDuplicates","validateOnDuplicates","min","max","isFilmDuplicated","filteredByTitleFilms","filter","then","data","className","styles","addFilmForm","onSubmit","labelItem","htmlFor","textOfLabelTitle","inputName","type","onChange","Button","nameOfClass","buttonStyles","addFilmFormButton","typeOfButton","holderText","Component","onClickFunc","dataId","onClick","data-id","BASE_URL","getAllFilms","axios","getFilmWithId","addNewFilm","post","deleteFilm","delete","previousSeed","randomFromSeed","ORIGINAL","reset","setCharacters","_alphabet_","Error","unique","item","ind","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","splice","shuffle","lookup","index","_defineProperty","obj","key","defineProperty","enumerable","configurable","writable"],"mappings":"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","file":"static/js/add-movies-page.85bc0a32.chunk.js","sourcesContent":["'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addFilmForm\":\"AddFilmPage_addFilmForm__3mETu\",\"textOfLabelTitle\":\"AddFilmPage_textOfLabelTitle__15h8q\",\"inputName\":\"AddFilmPage_inputName__2ZSNg\"};","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nimport * as filmsApi from '../../services/filmsApi';\r\nimport Button from '../../components/Button/Button';\r\n\r\nimport styles from './AddFilmPage.module.css';\r\nimport buttonStyles from '../../components/Button/Button.module.css';\r\n\r\nexport default class AddFilmPage extends Component {\r\n  state = {\r\n    title: '',\r\n    releaseYear: '',\r\n    format: 'DVD',\r\n    stars: '',\r\n    filmToAdd: null,\r\n    filmsList: null,\r\n  };\r\n\r\n  // GENERATE INPUTS ID ============================\r\n\r\n  titleInputId = shortid.generate();\r\n  releaseYearInputId = shortid.generate();\r\n  starsInputId = shortid.generate();\r\n  formatInputId = shortid.generate();\r\n\r\n  // LIFECYCLE METHODS ============================\r\n\r\n  componentDidMount() {\r\n    this.setFilmsFromDbToState();\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.filmToAdd !== null) {\r\n      this.addNewFilmInDb(this.state.filmToAdd);\r\n      this.resetState();\r\n    };\r\n\r\n    if (this.state.filmToAdd === null) {\r\n      this.setFilmsFromDbToState();\r\n    }\r\n  };\r\n\r\n  // HANDLE-EVENT METHODS ============================\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const {title, releaseYear, format, stars} = this.state;\r\n    if (title === '', releaseYear === '', stars === '') {\r\n      NotificationManager.error('Please, fill empty inputs!', 'Some of inputs are empty...', 5000);\r\n      return;\r\n    }\r\n    const formatStars = stars.split(', ');\r\n\r\n    const isValid = this.validateForm(title, + releaseYear, formatStars);\r\n\r\n    if (!isValid) {\r\n      return;\r\n    };\r\n\r\n    this.setState({\r\n      filmToAdd: {\r\n        title,\r\n        releaseYear: + releaseYear,\r\n        format,\r\n        stars: formatStars,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    if (name === \"releaseYear\" && value < 0) {\r\n      e.target.value = 0;\r\n      NotificationManager.error('Please, enter a year from 1850 to 2020', 'Release year can not be less, then 0!', 5000);\r\n      return;\r\n    }\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // VALIDATION METHODS ============================\r\n\r\n  validateForm (title, releaseYear, starsArray) {\r\n    const validationResultYear = this.validateReleaseYear(releaseYear, 1850, 2020);\r\n    const validationResultActors = this.validateStarsList(starsArray);\r\n    const validationResultDuplicates = this.validateOnDuplicates(title, releaseYear, starsArray);\r\n\r\n    if (!validationResultYear || !validationResultActors || !validationResultDuplicates) {\r\n      return false;\r\n    };\r\n    return true;\r\n  };\r\n\r\n  validateReleaseYear (year, min, max) {\r\n    if (year < min || year > max) {\r\n      NotificationManager.error(`Please, enter year from ${min} to ${max}`, 'Release year is not correct!', 5000);\r\n      return false;\r\n    };\r\n    return true;\r\n  };\r\n\r\n  validateStarsList (stars) {\r\n    const isUnique = this.checkArrayConsistOfUniqueElements(stars);\r\n\r\n    if (!isUnique) {\r\n      NotificationManager.error('Please, enter a unique (not repeat) actors data', 'Duplicate Actors Data!', 5000);\r\n      return false;\r\n    };\r\n    return true;\r\n  };\r\n\r\n  validateOnDuplicates (title, releaseYear, stars) {\r\n    const {filmsList} = this.state;\r\n\r\n    const filteredByTitleFilms = filmsList.filter(film => film.title === title);\r\n    let isFilmDuplicated;\r\n\r\n    if (filteredByTitleFilms.length > 0) {\r\n      isFilmDuplicated = this.isFilmDuplicateByYearOrActors(filteredByTitleFilms, releaseYear, stars);\r\n    };\r\n\r\n    if (isFilmDuplicated) {\r\n      NotificationManager.error('Film with similar title and release year/actors already has added .Please, enter other release year/actors data', 'Duplicate Films!', 5000);\r\n      return false;\r\n    } else {\r\n      return true;\r\n    };\r\n  };\r\n\r\n  // API METHODS ============================\r\n\r\n  addNewFilmInDb = (film) => {\r\n    filmsApi\r\n    .addNewFilm(film)\r\n    .catch(err => console.log(err));\r\n  };\r\n\r\n  setFilmsFromDbToState () {\r\n    filmsApi\r\n    .getAllFilms()\r\n    .then(({ data }) => {\r\n      this.setFilmsToState(data);\r\n    })\r\n    .catch(err => console.log(err));\r\n  };\r\n\r\n  // HELP METHODS ============================\r\n\r\n  setFilmsToState = (filmsList) => {\r\n    this.setState({\r\n      filmsList,\r\n    });\r\n  };\r\n\r\n  isFilmDuplicateByYearOrActors = (filmsArray, year, actorsArray) => {\r\n    const matchedFilmObjByReleaseYear = this.findFilmByReleaseYear(year, filmsArray);\r\n    const matchedFilmsByActors = this.findFilmsByActors(actorsArray, filmsArray);\r\n\r\n    if ( matchedFilmObjByReleaseYear || matchedFilmsByActors.length > 0) {\r\n      return true;\r\n    };\r\n    return false;\r\n  };\r\n\r\n  findFilmByReleaseYear = (year, filmsArray) => {\r\n    return filmsArray.find(film => film.releaseYear === year);\r\n  };\r\n\r\n  findFilmsByActors = (actorsArray, filmsArray) => {\r\n    let matchedFilms = [];\r\n    actorsArray.find(actor => {\r\n      if (matchedFilms.length > 0) {\r\n        return;\r\n      };\r\n\r\n      return filmsArray.find(film => {\r\n        if (film.stars.includes(actor)) {\r\n          matchedFilms.push(film);\r\n        };\r\n      });\r\n    });\r\n\r\n    return matchedFilms;\r\n  };\r\n\r\n  resetState = () => {\r\n    this.setState({\r\n      title: '',\r\n      releaseYear: '',\r\n      format: 'DVD',\r\n      stars: '',\r\n      filmToAdd: null,\r\n    });\r\n  };\r\n\r\n  checkArrayConsistOfUniqueElements = (arr) => {\r\n    const uniqueArray = [...new Set(arr)];\r\n\r\n    if (arr.length !== uniqueArray.length) {\r\n      return false;\r\n    };\r\n\r\n    return true;\r\n  };\r\n\r\n  // RENDER ============================\r\n\r\n  render() {\r\n    const { title, releaseYear, format, stars } = this.state;\r\n    return (\r\n      <>\r\n        <form className={styles.addFilmForm} onSubmit={this.handleSubmit}>\r\n          <label className={styles.labelItem} htmlFor={this.titleInputId}>\r\n            <p className={styles.textOfLabelTitle}>Film title</p>\r\n            <input\r\n              className={styles.inputName}\r\n              type=\"text\"\r\n              name=\"title\"\r\n              value={title}\r\n              onChange={this.handleChange}\r\n              id={this.titleInputId}\r\n            />\r\n          </label>\r\n          <label className={styles.labelItem} htmlFor={this.releaseYearInputId}>\r\n            <p className={styles.textOfLabelTitle}>Release year</p>\r\n            <input\r\n              className={styles.inputName}\r\n              type=\"number\"\r\n              name=\"releaseYear\"\r\n              value={releaseYear}\r\n              onChange={this.handleChange}\r\n              id={this.releaseYearInputId}\r\n            />\r\n          </label>\r\n          <label className={styles.labelItem} htmlFor={this.starsInputId}>\r\n            <p className={styles.textOfLabelTitle}>Actors (separate by commas and space)</p>\r\n            <input\r\n              className={styles.inputName}\r\n              type=\"text\"\r\n              name=\"stars\"\r\n              value={stars}\r\n              onChange={this.handleChange}\r\n              id={this.starsInputId}\r\n            />\r\n          </label>\r\n          <label className={styles.labelItem} htmlFor={this.formatInputId}>\r\n            <p className={styles.textOfLabelTitle}>Format</p>\r\n            <select\r\n              className={styles.inputName}\r\n              name=\"format\"\r\n              value={format}\r\n              onChange={this.handleChange}\r\n              id={this.formatInputId}\r\n            >\r\n              <option value={\"DVD\"}>DVD</option>\r\n              <option value={\"VHS\"}>VHS</option>\r\n              <option value={\"Blu-Ray\"}>Blu-Ray</option>\r\n            </select>\r\n          </label>\r\n          <Button nameOfClass={buttonStyles.addFilmFormButton} typeOfButton={'submit'} holderText={'Add film'}  />\r\n          <NotificationContainer/>\r\n        </form>\r\n      </>\r\n    )\r\n  };\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({onClickFunc, holderText = \"Button\", nameOfClass, typeOfButton = \"button\", dataId}) => {\r\n  if (dataId) {\r\n    return (\r\n      <button className={nameOfClass} type={typeOfButton} onClick={onClickFunc} data-id={dataId}>\r\n        {holderText}\r\n      </button>\r\n    );\r\n  } else {\r\n    return (\r\n      <button className={nameOfClass} type={typeOfButton} onClick={onClickFunc}>\r\n        {holderText}\r\n      </button>\r\n    )\r\n  };\r\n};\r\n\r\nButton.propTypes = {\r\n  onClickFunc: PropTypes.func,\r\n  holderText: PropTypes.string,\r\n  typeOfButton: PropTypes.string,\r\n  nameOfClass: PropTypes.string,\r\n};\r\n\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sortButton\":\"Button_sortButton__2xrgb\",\"deleteButton\":\"Button_deleteButton__32a5-\",\"backToFilmListButton\":\"Button_backToFilmListButton__XGy09\",\"addFilmFormButton\":\"Button_addFilmFormButton__1vNvk\"};","import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://powerful-peak-59605.herokuapp.com/films/';\r\n\r\nexport const getAllFilms = () => axios.get(BASE_URL);\r\n\r\nexport const getFilmWithId = id => axios.get(BASE_URL + `${id}`);\r\n\r\nexport const addNewFilm = film => axios.post(BASE_URL, film);\r\n\r\nexport const deleteFilm = id => axios.delete(BASE_URL + `${id}`);\r\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}"],"sourceRoot":""}