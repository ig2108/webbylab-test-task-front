{"version":3,"sources":["../node_modules/shortid/lib/util/cluster-worker-id-browser.js","pages/AddFilmPage/AddFilmPage.module.css","pages/AddFilmPage/AddFilmPage.jsx","components/Button/Button.jsx","components/Button/Button.module.css","services/filmsApi.jsx","../node_modules/shortid/lib/alphabet.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js"],"names":["module","exports","AddFilmPage","state","title","releaseYear","format","stars","filmToAdd","titleInputId","shortid","generate","releaseYearInputId","starsInputId","formatInputId","addNewFilmInDb","film","filmsApi","catch","err","console","log","handleSubmit","e","preventDefault","formatStars","split","setState","handleChange","target","name","value","resetState","this","className","styles","addFilmForm","onSubmit","labelItem","htmlFor","textOfLabelTitle","inputName","type","onChange","id","nameOfClass","buttonStyles","addFilmFormButton","typeOfButton","holderText","Component","Button","onClickFunc","dataId","onClick","data-id","BASE_URL","getAllFilms","axios","get","getFilmWithId","addNewFilm","post","deleteFilm","delete","alphabet","previousSeed","shuffled","randomFromSeed","require","ORIGINAL","reset","setCharacters","_alphabet_","length","Error","unique","filter","item","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","characters","seed","lookup","index","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","build","isValid","clusterWorkerId","seedValue","worker","workerId","newCharacters","undefined","_seed_","counter","previousSeconds","str","seconds","Date","now","random","number","done","loopCounter","pow","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","i","mask","LN2","step","RegExp","replace","test"],"mappings":"4IAEAA,EAAOC,QAAU,G,oBCDjBD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,iBAAmB,sCAAsC,UAAY,iC,gNCQjHC,E,4MACnBC,MAAQ,CACNC,MAAO,GACPC,YAAa,GACbC,OAAQ,MACRC,MAAO,GACPC,UAAW,M,EAGbC,aAAeC,IAAQC,W,EACvBC,mBAAqBF,IAAQC,W,EAC7BE,aAAeH,IAAQC,W,EACvBG,cAAgBJ,IAAQC,W,EAExBI,eAAiB,SAACC,GAChBC,IACYD,GACXE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,O,EAU5BG,aAAe,SAACC,GACdA,EAAEC,iBADkB,MAEwB,EAAKrB,MAA1CC,EAFa,EAEbA,MAAOC,EAFM,EAENA,YAAaC,EAFP,EAEOA,OACrBmB,EAHc,EAEelB,MACTmB,MAAM,MAChC,EAAKC,SAAS,CACZnB,UAAW,CACTJ,QACAC,cACAC,SACAC,MAAOkB,M,EAKbG,aAAe,SAAAL,GAAM,IAAD,EACMA,EAAEM,OAAlBC,EADU,EACVA,KAAMC,EADI,EACJA,MACD,gBAATD,GAA0BC,EAAQ,EACpCR,EAAEM,OAAOE,MAAQ,EAGnB,EAAKJ,SAAL,eACGG,EAAOC,K,EAIZC,WAAa,WACX,EAAKL,SAAS,CACZvB,MAAO,GACPC,YAAa,GACbC,OAAQ,MACRC,MAAO,GACPC,UAAW,Q,mEArCgB,OAAzByB,KAAK9B,MAAMK,YACbyB,KAAKlB,eAAekB,KAAK9B,MAAMK,WAC/ByB,KAAKD,gB,+BAuCC,IAAD,EACuCC,KAAK9B,MAA3CC,EADD,EACCA,MAAOC,EADR,EACQA,YAAaC,EADrB,EACqBA,OAAQC,EAD7B,EAC6BA,MACpC,OACE,0BAAM2B,UAAWC,IAAOC,YAAaC,SAAUJ,KAAKX,cAClD,2BAAOY,UAAWC,IAAOG,UAAWC,QAASN,KAAKxB,cAChD,uBAAGyB,UAAWC,IAAOK,kBAArB,cACA,2BACEN,UAAWC,IAAOM,UAClBC,KAAK,OACLZ,KAAK,QACLC,MAAO3B,EACPuC,SAAUV,KAAKL,aACfgB,GAAIX,KAAKxB,gBAGb,2BAAOyB,UAAWC,IAAOG,UAAWC,QAASN,KAAKrB,oBAChD,uBAAGsB,UAAWC,IAAOK,kBAArB,gBACA,2BACEN,UAAWC,IAAOM,UAClBC,KAAK,SACLZ,KAAK,cACLC,MAAO1B,EACPsC,SAAUV,KAAKL,aACfgB,GAAIX,KAAKrB,sBAGb,2BAAOsB,UAAWC,IAAOG,UAAWC,QAASN,KAAKpB,cAChD,uBAAGqB,UAAWC,IAAOK,kBAArB,yCACA,2BACEN,UAAWC,IAAOM,UAClBC,KAAK,OACLZ,KAAK,QACLC,MAAOxB,EACPoC,SAAUV,KAAKL,aACfgB,GAAIX,KAAKpB,gBAGb,2BAAOqB,UAAWC,IAAOG,UAAWC,QAASN,KAAKnB,eAChD,uBAAGoB,UAAWC,IAAOK,kBAArB,UACA,4BACEN,UAAWC,IAAOM,UAClBX,KAAK,SACLC,MAAOzB,EACPqC,SAAUV,KAAKL,aACfgB,GAAIX,KAAKnB,eAET,4BAAQiB,MAAO,OAAf,OACA,4BAAQA,MAAO,OAAf,OACA,4BAAQA,MAAO,WAAf,aAIJ,kBAAC,IAAD,CAAQc,YAAaC,IAAaC,kBAAmBC,aAAc,SAAUC,WAAY,kB,GAlHxDC,c,gCCTzC,oBA0BeC,IAvBA,SAAC,GAAwF,IAAvFC,EAAsF,EAAtFA,YAAsF,IAAzEH,kBAAyE,MAA5D,SAA4D,EAAlDJ,EAAkD,EAAlDA,YAAkD,IAArCG,oBAAqC,MAAtB,SAAsB,EAAZK,EAAY,EAAZA,OACzF,OAAIA,EAEA,4BAAQnB,UAAWW,EAAaH,KAAMM,EAAcM,QAASF,EAAaG,UAASF,GAChFJ,GAKH,4BAAQf,UAAWW,EAAaH,KAAMM,EAAcM,QAASF,GAC1DH,K,mBCZTjD,EAAOC,QAAU,CAAC,WAAa,2BAA2B,aAAe,6BAA6B,qBAAuB,qCAAqC,kBAAoB,oC,gCCDtL,6JAEMuD,EAAW,mDAEJC,EAAc,kBAAMC,IAAMC,IAAIH,IAE9BI,EAAgB,SAAAhB,GAAE,OAAIc,IAAMC,IAAIH,EAAQ,UAAMZ,KAE9CiB,EAAa,SAAA7C,GAAI,OAAI0C,IAAMI,KAAKN,EAAUxC,IAE1C+C,EAAa,SAAAnB,GAAE,OAAIc,IAAMM,OAAOR,EAAQ,UAAMZ,M,gCCR3D,IAGIqB,EACAC,EAEAC,EANAC,EAAiBC,EAAQ,IAEzBC,EAAW,mEAMf,SAASC,IACLJ,GAAW,EAGf,SAASK,EAAcC,GACnB,GAAKA,GAQL,GAAIA,IAAeR,EAAnB,CAIA,GAAIQ,EAAWC,SAAWJ,EAASI,OAC/B,MAAM,IAAIC,MAAM,uCAAyCL,EAASI,OAAS,qCAAuCD,EAAWC,OAAS,gBAAkBD,GAG5J,IAAIG,EAASH,EAAW/C,MAAM,IAAImD,QAAO,SAASC,EAAMC,EAAKC,GAC1D,OAAOD,IAAQC,EAAIC,YAAYH,MAGlC,GAAIF,EAAOF,OACP,MAAM,IAAIC,MAAM,uCAAyCL,EAASI,OAAS,yDAA2DE,EAAOM,KAAK,OAGtJjB,EAAWQ,EACXF,UAxBQN,IAAaK,IACbL,EAAWK,EACXC,KAwDZ,SAASY,IACL,OAAIhB,IAGJA,EAtBJ,WACSF,GACDO,EAAcF,GAQlB,IALA,IAGIc,EAHAC,EAAcpB,EAASvC,MAAM,IAC7B4D,EAAc,GACdC,EAAInB,EAAeoB,YAGhBH,EAAYX,OAAS,GACxBa,EAAInB,EAAeoB,YACnBJ,EAAiBK,KAAKC,MAAMH,EAAIF,EAAYX,QAC5CY,EAAYK,KAAKN,EAAYO,OAAOR,EAAgB,GAAG,IAE3D,OAAOE,EAAYJ,KAAK,IAObW,IAkBf7F,EAAOC,QAAU,CACb0D,IALJ,WACE,OAAOM,GAAYK,GAKjBwB,WAvDJ,SAAoBrB,GAEhB,OADAD,EAAcC,GACPR,GAsDP8B,KAnDJ,SAAiBA,GACb3B,EAAe2B,KAAKA,GAChB7B,IAAiB6B,IACjBxB,IACAL,EAAe6B,IAgDnBC,OAbJ,SAAgBC,GAEZ,OADuBd,IACCc,IAYxB9B,SAAUgB,I,gCCrGC,SAASe,EAAgBC,EAAKC,EAAKrE,GAYhD,OAXIqE,KAAOD,EACTE,OAAOC,eAAeH,EAAKC,EAAK,CAC9BrE,MAAOA,EACPwE,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZN,EAAIC,GAAOrE,EAGNoE,EAZT,mC,gCCCAnG,EAAOC,QAAUoE,EAAQ,K,gCCCzB,IAAIJ,EAAWI,EAAQ,IACnBqC,EAAQrC,EAAQ,IAChBsC,EAAUtC,EAAQ,IAMlBuC,EAAkBvC,EAAQ,MAA+B,EAyC7D,SAAS1D,IACP,OAAO+F,EAAME,GAIf5G,EAAOC,QAAUU,EACjBX,EAAOC,QAAQU,SAAWA,EAC1BX,EAAOC,QAAQ8F,KAxCf,SAAcc,GAEV,OADA5C,EAAS8B,KAAKc,GACP7G,EAAOC,SAuClBD,EAAOC,QAAQ6G,OA9Bf,SAAgBC,GAEZ,OADAH,EAAkBG,EACX/G,EAAOC,SA6BlBD,EAAOC,QAAQ6F,WArBf,SAAoBkB,GAKhB,YAJsBC,IAAlBD,GACA/C,EAAS6B,WAAWkB,GAGjB/C,EAASE,YAiBpBnE,EAAOC,QAAQ0G,QAAUA,G,gCCxDzB,IAAIZ,EAAO,EAgBX/F,EAAOC,QAAU,CACbuF,UAVJ,WAEI,OADAO,GAAe,KAAPA,EAAc,OAAS,QAClB,QASbA,KANJ,SAAiBmB,GACbnB,EAAOmB,K,gCChBX,IAaIC,EAGAC,EAhBAzG,EAAW0D,EAAQ,IACRA,EAAQ,IA0CvBrE,EAAOC,QArBP,SAAe2G,GACX,IAAIS,EAAM,GAENC,EAAU7B,KAAKC,MAAmC,MAA5B6B,KAAKC,MAnBjB,gBAkCd,OAbIF,IAAYF,EACZD,KAEAA,EAAU,EACVC,EAAkBE,GAGtBD,GAAY1G,EAxBF,GAyBV0G,GAAY1G,EAASiG,GACjBO,EAAU,IACVE,GAAY1G,EAASwG,IAEzBE,GAAY1G,EAAS2G,K,gCCvCzB,IAAIrD,EAAWI,EAAQ,IACnBoD,EAASpD,EAAQ,IACjB/D,EAAS+D,EAAQ,IAgBrBrE,EAAOC,QAdP,SAAkByH,GAMd,IALA,IACIC,EADAC,EAAc,EAGdP,EAAM,IAEFM,GACJN,GAAY/G,EAAOmH,EAAQxD,EAASN,MAAO,GAC3CgE,EAAOD,EAAUjC,KAAKoC,IAAI,GAAID,EAAc,GAC5CA,IAEJ,OAAOP,I,gCCfX,IAEIS,EAFAC,EAA2B,kBAAXC,SAAwBA,OAAOD,QAAUC,OAAOC,UAahEH,EATCC,GAAWA,EAAOG,gBASN,SAASC,GAClB,OAAOJ,EAAOG,gBAAgB,IAAIE,WAAWD,KATpC,SAASA,GAElB,IADA,IAAIE,EAAQ,GACHC,EAAI,EAAGA,EAAIH,EAAMG,IACtBD,EAAM1C,KAAKF,KAAKC,MAAsB,IAAhBD,KAAKgC,WAE/B,OAAOY,GAQfrI,EAAOC,QAAU6H,G,iBCjBjB9H,EAAOC,QAAU,SAAUwH,EAAQxD,EAAUkE,GAwB3C,IAlBA,IAAII,GAAQ,GAAK9C,KAAKpE,IAAI4C,EAASS,OAAS,GAAKe,KAAK+C,KAAO,EAezDC,KAAU,IAAMF,EAAOJ,EAAOlE,EAASS,QACvC9B,EAAK,KAMP,IAHA,IAAIyF,EAAQZ,EAAOgB,GAEfH,EAAIG,EACDH,KAKL,IAFA1F,GAAMqB,EAASoE,EAAMC,GAAKC,IAAS,IAE5B7D,UAAYyD,EAAM,OAAOvF,I,gCCnCtC,IAAIqB,EAAWI,EAAQ,IAavBrE,EAAOC,QAXP,SAAmB2C,GACf,SAAKA,GAAoB,kBAAPA,GAAmBA,EAAG8B,OAAS,KAI7B,IAAIgE,OAAO,KAC7BzE,EAASN,MAAMgF,QAAQ,uBAAwB,QACjD,KACsBC,KAAKhG","file":"static/js/add-movies-page.9d523590.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = 0;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addFilmForm\":\"AddFilmPage_addFilmForm__3mETu\",\"textOfLabelTitle\":\"AddFilmPage_textOfLabelTitle__15h8q\",\"inputName\":\"AddFilmPage_inputName__2ZSNg\"};","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\n\r\nimport * as filmsApi from '../../services/filmsApi';\r\nimport Button from '../../components/Button/Button';\r\n\r\nimport styles from './AddFilmPage.module.css';\r\nimport buttonStyles from '../../components/Button/Button.module.css';\r\n\r\nexport default class AddFilmPage extends Component {\r\n  state = {\r\n    title: '',\r\n    releaseYear: '',\r\n    format: 'DVD',\r\n    stars: '',\r\n    filmToAdd: null,\r\n  };\r\n\r\n  titleInputId = shortid.generate();\r\n  releaseYearInputId = shortid.generate();\r\n  starsInputId = shortid.generate();\r\n  formatInputId = shortid.generate();\r\n\r\n  addNewFilmInDb = (film) => {\r\n    filmsApi\r\n    .addNewFilm(film)\r\n    .catch(err => console.log(err));\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.filmToAdd !== null) {\r\n      this.addNewFilmInDb(this.state.filmToAdd);\r\n      this.resetState();\r\n    };\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const {title, releaseYear, format, stars} = this.state;\r\n    const formatStars = stars.split(', ');\r\n    this.setState({\r\n      filmToAdd: {\r\n        title,\r\n        releaseYear,\r\n        format,\r\n        stars: formatStars,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    if (name === \"releaseYear\" && value < 0) {\r\n      e.target.value = 0;\r\n      return;\r\n    }\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  resetState = () => {\r\n    this.setState({\r\n      title: '',\r\n      releaseYear: '',\r\n      format: 'DVD',\r\n      stars: '',\r\n      filmToAdd: null,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { title, releaseYear, format, stars } = this.state;\r\n    return (\r\n      <form className={styles.addFilmForm} onSubmit={this.handleSubmit}>\r\n        <label className={styles.labelItem} htmlFor={this.titleInputId}>\r\n          <p className={styles.textOfLabelTitle}>Film title</p>\r\n          <input\r\n            className={styles.inputName}\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={title}\r\n            onChange={this.handleChange}\r\n            id={this.titleInputId}\r\n          />\r\n        </label>\r\n        <label className={styles.labelItem} htmlFor={this.releaseYearInputId}>\r\n          <p className={styles.textOfLabelTitle}>Release year</p>\r\n          <input\r\n            className={styles.inputName}\r\n            type=\"number\"\r\n            name=\"releaseYear\"\r\n            value={releaseYear}\r\n            onChange={this.handleChange}\r\n            id={this.releaseYearInputId}\r\n          />\r\n        </label>\r\n        <label className={styles.labelItem} htmlFor={this.starsInputId}>\r\n          <p className={styles.textOfLabelTitle}>Actors (separate by commas and space)</p>\r\n          <input\r\n            className={styles.inputName}\r\n            type=\"text\"\r\n            name=\"stars\"\r\n            value={stars}\r\n            onChange={this.handleChange}\r\n            id={this.starsInputId}\r\n          />\r\n        </label>\r\n        <label className={styles.labelItem} htmlFor={this.formatInputId}>\r\n          <p className={styles.textOfLabelTitle}>Format</p>\r\n          <select\r\n            className={styles.inputName}\r\n            name=\"format\"\r\n            value={format}\r\n            onChange={this.handleChange}\r\n            id={this.formatInputId}\r\n          >\r\n            <option value={\"DVD\"}>DVD</option>\r\n            <option value={\"VHS\"}>VHS</option>\r\n            <option value={\"Blu-Ray\"}>Blu-Ray</option>\r\n          </select>\r\n\r\n        </label>\r\n        <Button nameOfClass={buttonStyles.addFilmFormButton} typeOfButton={'submit'} holderText={'Add film'}  />\r\n      </form>\r\n    );\r\n  };\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({onClickFunc, holderText = \"Button\", nameOfClass, typeOfButton = \"button\", dataId}) => {\r\n  if (dataId) {\r\n    return (\r\n      <button className={nameOfClass} type={typeOfButton} onClick={onClickFunc} data-id={dataId}>\r\n        {holderText}\r\n      </button>\r\n    );\r\n  } else {\r\n    return (\r\n      <button className={nameOfClass} type={typeOfButton} onClick={onClickFunc}>\r\n        {holderText}\r\n      </button>\r\n    )\r\n  };\r\n};\r\n\r\nButton.propTypes = {\r\n  onClickFunc: PropTypes.func,\r\n  holderText: PropTypes.string,\r\n  typeOfButton: PropTypes.string,\r\n  nameOfClass: PropTypes.string,\r\n};\r\n\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sortButton\":\"Button_sortButton__2xrgb\",\"deleteButton\":\"Button_deleteButton__32a5-\",\"backToFilmListButton\":\"Button_backToFilmListButton__XGy09\",\"addFilmFormButton\":\"Button_addFilmFormButton__1vNvk\"};","import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://powerful-peak-59605.herokuapp.com/films/';\r\n\r\nexport const getAllFilms = () => axios.get(BASE_URL);\r\n\r\nexport const getFilmWithId = id => axios.get(BASE_URL + `${id}`);\r\n\r\nexport const addNewFilm = film => axios.post(BASE_URL, film);\r\n\r\nexport const deleteFilm = id => axios.delete(BASE_URL + `${id}`);\r\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n"],"sourceRoot":""}