{"version":3,"sources":["components/FilmsList/FilmsList.module.css","components/Searchbar/Searchbar.module.css","pages/HomePage/HomePage.module.css","components/FilmsList/FilmsList.jsx","components/Searchbar/Searchbar.jsx","pages/HomePage/HomePage.jsx","components/Button/Button.jsx","components/Button/Button.module.css","services/filmsApi.jsx"],"names":["module","exports","withRouter","films","location","onDeleteFunc","className","styles","filmsList","map","_id","title","key","filmsListItem","filmListItem__Link","to","pathname","state","from","filmsListItemTitle","Button","onClickFunc","holderText","typeOfButton","nameOfClass","buttonStyles","deleteButton","dataId","Searchbar","queryInput","handleChangeInputSearch","e","value","target","setState","handleSubmit","preventDefault","onSubmit","props","placeholderInput","this","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","onChange","autoComplete","autoFocus","placeholder","Component","defaultProps","HomePage","sortByTitle","filterTitle","filterActor","handleDelete","id","dataset","filmsApi","then","data","sortFilms","setFilmsToState","NotificationManager","success","catch","err","console","log","handleSortByTitle","setSortedFilmsFromDbToState","handleSortDefault","setFilmsFromDbToState","handleSubmitSearchTitle","queryString","handleSubmitSearchActor","prevProps","prevState","sort","a","b","filteredFilms","filter","film","toLowerCase","includes","filterFilmsByTitle","stars","star","filterFilmsByActor","homePage","sortButtonWrap","sortButton","searchbarWrap","searchbarTitle","filmListTitle","onClick","data-id","BASE_URL","getAllFilms","axios","get","getFilmWithId","addNewFilm","post","deleteFilm","delete"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,cAAgB,iCAAiC,mBAAqB,sCAAsC,mBAAqB,wC,oBCA5LD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,iBAAmB,oCAAoC,sBAAwB,yCAAyC,gBAAkB,qC,oBCAhPD,EAAOC,QAAU,CAAC,eAAiB,iCAAiC,cAAgB,gCAAgC,eAAiB,iCAAiC,cAAgB,kC,qNCqCvKC,eA7BG,SAAC,GAA4C,IAAD,IAAzCC,aAAyC,MAAjC,GAAiC,EAA7BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aACzC,OACE,wBAAIC,UAAWC,IAAOC,WACnBL,EAAMM,KAAI,gBAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,MAAR,OACT,wBAAIC,IAAKF,EAAKJ,UAAWC,IAAOM,eAC9B,kBAAC,IAAD,CAAMP,UAAWC,IAAOO,mBAAoBC,GAAI,CAAEC,SAAS,UAAD,OAAYN,GAAOO,MAAO,CAAEC,KAAMd,KAC1F,uBAAGE,UAAWC,IAAOY,oBAAqBR,IAE5C,kBAACS,EAAA,EAAD,CAAQC,YAAahB,EAAciB,WAAY,SAAUC,aAAc,SAAUC,YAAaC,IAAaC,aAAcC,OAAQjB,Y,kBCZtHkB,E,4MACnBX,MAAQ,CACNY,WAAY,I,EAGdC,wBAA0B,SAAAC,GAAM,IACtBC,EAAUD,EAAEE,OAAZD,MACR,EAAKE,SAAS,CACZL,WAAYG,K,EAIhBG,aAAe,SAAAJ,GACbA,EAAEK,iBADgB,IAEVP,EAAe,EAAKZ,MAApBY,WACAQ,EAAa,EAAKC,MAAlBD,SACJR,IACFQ,EAASR,GACT,EAAKK,SAAS,CACZL,WAAY,O,uDAKR,IACDU,EAAoBC,KAAKF,MAAzBC,iBACCV,EAAeW,KAAKvB,MAApBY,WACR,OACE,yBAAKvB,UAAWC,IAAOqB,WACrB,0BAAMtB,UAAWC,IAAOkC,WAAYJ,SAAUG,KAAKL,cACjD,4BAAQO,KAAK,SAASpC,UAAWC,IAAOoC,kBACtC,0BAAMrC,UAAWC,IAAOqC,uBAAxB,WAEF,2BACEtC,UAAWC,IAAOsC,gBAClBH,KAAK,OACLV,MAAOH,EACPiB,SAAUN,KAAKV,wBACfiB,aAAa,MACbC,WAAS,EACTC,YAAaV,U,GAxCcW,aAgDvCtB,EAAUuB,aAAe,CACvBZ,iBAAkB,U,sBC7BCa,E,4MACnBnC,MAAQ,CACNd,MAAO,GACPkD,aAAa,EACbC,YAAa,GACbC,YAAa,I,EAyBfC,aAAe,SAACzB,GACdA,EAAEK,iBACF,IAAMqB,EAAK1B,EAAEE,OAAOyB,QAAQD,GAE5BE,IACYF,GACXG,MAAK,YAAa,IAAXC,EAAU,EAAVA,MACyB,IAA3B,EAAK5C,MAAMoC,aAGb,EAAKS,UAAUD,GAFf,EAAKE,gBAAgBF,GAKvBG,sBAAoBC,QAAQ,kCAAmC,WAAY,QAE5EC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,O,EAG5BG,kBAAoB,WAClB,EAAKpC,SAAS,CACZmB,aAAa,IAEf,EAAKkB,+B,EAGPC,kBAAoB,WAClB,EAAKtC,SAAS,CACZmB,aAAa,IAEf,EAAKoB,yB,EAGPC,wBAA0B,SAACC,GACzB,EAAKzC,SAAS,CACZoB,YAAaqB,K,EAIjBC,wBAA0B,SAACD,GACzB,EAAKzC,SAAS,CACZqB,YAAaoB,K,EA2BjBZ,gBAAkB,SAAC5D,GACjB,EAAK+B,SAAS,CACZ/B,W,kEAxFAqC,KAAKiC,wBACLjC,KAAKN,SAAS,CACZoB,YAAa,GACbC,YAAa,O,yCAIAsB,EAAWC,GACxBA,EAAU3E,QAAUqC,KAAKvB,MAAMd,OACjCiE,QAAQC,IAAI,kBAGVS,EAAUxB,cAAgBd,KAAKvB,MAAMqC,aAAewB,EAAUvB,cAAgBf,KAAKvB,MAAMsC,aAC3Fa,QAAQC,IAAI,qB,8CAoDU,IAAD,OACvBV,MAECC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACP,EAAKE,gBAAgBF,MAEtBK,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,oDAGI,IAAD,OAC7BR,MAECC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACP,EAAKC,UAAUD,GACf,EAAKE,gBAAgBF,MAEtBK,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,gCAWlBhE,GACR,OAAOA,EAAM4E,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAErE,MAAQsE,EAAEtE,MAAS,GAAK,O,+BAK/C,IAEJuE,EAFG,EACqC1C,KAAKvB,MAAzCd,EADD,EACCA,MAAOmD,EADR,EACQA,YAAaC,EADrB,EACqBA,YAS5B,OANE2B,EADE5B,EA3HmB,SAACnD,EAAOgF,GACjC,OAAOhF,EAAMgF,QAAO,SAAAC,GAAI,OACtBA,EAAKzE,MAAM0E,cAAcC,SAASH,EAAOE,kBA0HvBE,CAAmBpF,EAAOmD,GACjCC,EAxHY,SAACpD,EAAOgF,GACjC,OAAOhF,EAAMgF,QAAO,SAAAC,GAAI,OACtBA,EAAKI,MAAM/E,KAAI,SAAAgF,GAAI,OAAIA,EAAKJ,iBAAeC,SAASH,EAAOE,kBAuHzCK,CAAmBvF,EAAOoD,GAE1BpD,EAGhB,yBAAKG,UAAWC,IAAOoF,UACrB,yBAAKrF,UAAWC,IAAOqF,gBACrB,kBAACxE,EAAA,EAAD,CAAQE,WAAY,gBAAiBE,YAAaC,IAAaoE,WAAYxE,YAAamB,KAAK8B,oBAC7F,kBAAClD,EAAA,EAAD,CAAQE,WAAY,eAAgBE,YAAaC,IAAaoE,WAAYxE,YAAamB,KAAKgC,qBAE9F,yBAAKlE,UAAWC,IAAOuF,eACrB,wBAAIxF,UAAWC,IAAOwF,gBAAtB,yBACA,kBAAC,EAAD,CAAW1D,SAAUG,KAAKkC,wBAAyBnC,iBAAkB,uBACrE,wBAAIjC,UAAWC,IAAOwF,gBAAtB,yBACA,kBAAC,EAAD,CAAW1D,SAAUG,KAAKoC,wBAAyBrC,iBAAkB,wBAEvE,wBAAIjC,UAAWC,IAAOyF,eAAtB,SACA,kBAAC,EAAD,CAAW7F,MAAO+E,EAAe7E,aAAcmC,KAAKgB,eACpD,kBAAC,wBAAD,W,GArI8BN,c,gCCzBtC,oBA0Be9B,IAvBA,SAAC,GAAwF,IAAvFC,EAAsF,EAAtFA,YAAsF,IAAzEC,kBAAyE,MAA5D,SAA4D,EAAlDE,EAAkD,EAAlDA,YAAkD,IAArCD,oBAAqC,MAAtB,SAAsB,EAAZI,EAAY,EAAZA,OACzF,OAAIA,EAEA,4BAAQrB,UAAWkB,EAAakB,KAAMnB,EAAc0E,QAAS5E,EAAa6E,UAASvE,GAChFL,GAKH,4BAAQhB,UAAWkB,EAAakB,KAAMnB,EAAc0E,QAAS5E,GAC1DC,K,mBCZTtB,EAAOC,QAAU,CAAC,WAAa,2BAA2B,aAAe,6BAA6B,qBAAuB,qCAAqC,kBAAoB,oC,gCCDtL,6JAEMkG,EAAW,mDAEJC,EAAc,kBAAMC,IAAMC,IAAIH,IAE9BI,EAAgB,SAAA9C,GAAE,OAAI4C,IAAMC,IAAIH,EAAQ,UAAM1C,KAE9C+C,EAAa,SAAApB,GAAI,OAAIiB,IAAMI,KAAKN,EAAUf,IAE1CsB,EAAa,SAAAjD,GAAE,OAAI4C,IAAMM,OAAOR,EAAQ,UAAM1C","file":"static/js/home-page.e0a0790c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filmsList\":\"FilmsList_filmsList__1p8dj\",\"filmsListItem\":\"FilmsList_filmsListItem__3oJ1d\",\"filmListItem__Link\":\"FilmsList_filmListItem__Link__ftD8e\",\"filmsListItemTitle\":\"FilmsList_filmsListItemTitle__2Bggl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__O4m0E\",\"SearchForm\":\"Searchbar_SearchForm__Wstyn\",\"SearchFormButton\":\"Searchbar_SearchFormButton__2brRI\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__3xbb0\",\"SearchFormInput\":\"Searchbar_SearchFormInput__6O8tI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sortButtonWrap\":\"HomePage_sortButtonWrap__3HW97\",\"searchbarWrap\":\"HomePage_searchbarWrap__3sMdB\",\"searchbarTitle\":\"HomePage_searchbarTitle__2xtjU\",\"filmListTitle\":\"HomePage_filmListTitle__gnGpB\"};","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '../Button/Button';\r\n\r\nimport styles from './FilmsList.module.css';\r\nimport buttonStyles from '../Button/Button.module.css'\r\n\r\nconst FilmsList = ({ films = [], location, onDeleteFunc }) => {\r\n  return (\r\n    <ul className={styles.filmsList}>\r\n      {films.map(({ _id, title }) => (\r\n        <li key={_id} className={styles.filmsListItem}>\r\n          <Link className={styles.filmListItem__Link} to={{ pathname: `/films/${_id}`, state: { from: location } }}>\r\n            <p className={styles.filmsListItemTitle}>{title}</p>\r\n          </Link>\r\n          <Button onClickFunc={onDeleteFunc} holderText={'Delete'} typeOfButton={'button'} nameOfClass={buttonStyles.deleteButton} dataId={_id}/>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFilmsList.propTypes = {\r\n  films: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      _id: PropTypes.string.isRequired,\r\n      format: PropTypes.string.isRequired,\r\n      releaseYear: PropTypes.number.isRequired,\r\n      stars: PropTypes.array.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  onDeleteFunc: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(FilmsList);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Searchbar.module.css';\r\n\r\nexport default class Searchbar extends Component {\r\n  state = {\r\n    queryInput: '',\r\n  };\r\n\r\n  handleChangeInputSearch = e => {\r\n    const { value } = e.target;\r\n    this.setState({\r\n      queryInput: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { queryInput } = this.state;\r\n    const { onSubmit } = this.props;\r\n    if (queryInput) {\r\n      onSubmit(queryInput);\r\n      this.setState({\r\n        queryInput: '',\r\n      });\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const {placeholderInput} = this.props;\r\n    const { queryInput } = this.state;\r\n    return (\r\n      <div className={styles.Searchbar}>\r\n        <form className={styles.SearchForm} onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className={styles.SearchFormButton}>\r\n            <span className={styles.SearchFormButtonLabel}>Search</span>\r\n          </button>\r\n          <input\r\n            className={styles.SearchFormInput}\r\n            type=\"text\"\r\n            value={queryInput}\r\n            onChange={this.handleChangeInputSearch}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder={placeholderInput}\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nSearchbar.defaultProps = {\r\n  placeholderInput: 'Search'\r\n};\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n  placeholderInput: PropTypes.string,\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nimport * as filmsApi from '../../services/filmsApi';\r\n\r\nimport Button from '../../components/Button/Button';\r\nimport FilmsList from '../../components/FilmsList/FilmsList';\r\nimport Searchbar from '../../components/Searchbar/Searchbar';\r\n\r\nimport styles from './HomePage.module.css';\r\nimport buttonStyles from '../../components/Button/Button.module.css';\r\n\r\nconst filterFilmsByTitle = (films, filter) => {\r\n  return films.filter(film =>\r\n    film.title.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n};\r\nconst filterFilmsByActor = (films, filter) => {\r\n  return films.filter(film =>\r\n    film.stars.map(star => star.toLowerCase()).includes(filter.toLowerCase())\r\n  );\r\n};\r\n\r\nexport default class HomePage extends Component {\r\n  state = {\r\n    films: [],\r\n    sortByTitle: false,\r\n    filterTitle: '',\r\n    filterActor: '',\r\n  };\r\n\r\n  // LIFECYCLE METHODS ============================\r\n\r\n  componentDidMount() {\r\n      this.setFilmsFromDbToState();\r\n      this.setState({\r\n        filterTitle: '',\r\n        filterActor: '',\r\n      })\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.films !== this.state.films) {\r\n      console.log(\"Updated state!\");\r\n    };\r\n\r\n    if (prevState.filterTitle !== this.state.filterTitle || prevState.filterActor !== this.state.filterActor) {\r\n      console.log('Updated search!');\r\n    };\r\n  };\r\n\r\n  // HANDLE-EVENT METHODS ============================\r\n\r\n  handleDelete = (e) => {\r\n    e.preventDefault();\r\n    const id = e.target.dataset.id;\r\n\r\n    filmsApi\r\n    .deleteFilm(id)\r\n    .then(({data}) => {\r\n      if (this.state.sortByTitle === false) {\r\n        this.setFilmsToState(data);\r\n      } else {\r\n        this.sortFilms(data);\r\n        this.setFilmsToState(data);\r\n      };\r\n      NotificationManager.success('Your film successfully deleted!', 'Deleted!', 5000);\r\n    })\r\n    .catch(err => console.log(err));\r\n  };\r\n\r\n  handleSortByTitle = () => {\r\n    this.setState({\r\n      sortByTitle: true,\r\n    });\r\n    this.setSortedFilmsFromDbToState();\r\n  };\r\n\r\n  handleSortDefault = () => {\r\n    this.setState({\r\n      sortByTitle: false,\r\n    });\r\n    this.setFilmsFromDbToState();\r\n  };\r\n\r\n  handleSubmitSearchTitle = (queryString) => {\r\n    this.setState({\r\n      filterTitle: queryString,\r\n    });\r\n  };\r\n\r\n  handleSubmitSearchActor = (queryString) => {\r\n    this.setState({\r\n      filterActor: queryString,\r\n    });\r\n  };\r\n\r\n  // API METHODS ============================\r\n\r\n  setFilmsFromDbToState () {\r\n    filmsApi\r\n    .getAllFilms()\r\n    .then(({ data }) => {\r\n      this.setFilmsToState(data);\r\n    })\r\n    .catch(err => console.log(err));\r\n  };\r\n\r\n  setSortedFilmsFromDbToState () {\r\n    filmsApi\r\n    .getAllFilms()\r\n    .then(({ data }) => {\r\n      this.sortFilms(data);\r\n      this.setFilmsToState(data);\r\n    })\r\n    .catch(err => console.log(err));\r\n  };\r\n\r\n  // HELP METHODS ============================\r\n\r\n  setFilmsToState = (films) => {\r\n    this.setState({\r\n      films,\r\n    });\r\n  };\r\n\r\n  sortFilms(films) {\r\n    return films.sort((a, b) => (a.title > b.title) ? 1 : -1);\r\n  };\r\n\r\n  // RENDER ============================\r\n\r\n  render() {\r\n    const { films, filterTitle, filterActor } = this.state;\r\n    let filteredFilms;\r\n    if (filterTitle) {\r\n      filteredFilms = filterFilmsByTitle(films, filterTitle);\r\n    } else if (filterActor) {\r\n      filteredFilms = filterFilmsByActor(films, filterActor);\r\n    } else {\r\n      filteredFilms = films;\r\n    }\r\n    return (\r\n      <div className={styles.homePage}>\r\n        <div className={styles.sortButtonWrap}>\r\n          <Button holderText={'Sort by Title'} nameOfClass={buttonStyles.sortButton} onClickFunc={this.handleSortByTitle} />\r\n          <Button holderText={'Default sort'} nameOfClass={buttonStyles.sortButton} onClickFunc={this.handleSortDefault} />\r\n        </div>\r\n        <div className={styles.searchbarWrap}>\r\n          <h3 className={styles.searchbarTitle}>Search film by title:</h3>\r\n          <Searchbar onSubmit={this.handleSubmitSearchTitle} placeholderInput={'Please, type title'} />\r\n          <h3 className={styles.searchbarTitle}>Search film by actor:</h3>\r\n          <Searchbar onSubmit={this.handleSubmitSearchActor} placeholderInput={'Please, type actor'} />\r\n        </div>\r\n        <h2 className={styles.filmListTitle}>Films</h2>\r\n        <FilmsList films={filteredFilms} onDeleteFunc={this.handleDelete} />\r\n        <NotificationContainer/>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({onClickFunc, holderText = \"Button\", nameOfClass, typeOfButton = \"button\", dataId}) => {\r\n  if (dataId) {\r\n    return (\r\n      <button className={nameOfClass} type={typeOfButton} onClick={onClickFunc} data-id={dataId}>\r\n        {holderText}\r\n      </button>\r\n    );\r\n  } else {\r\n    return (\r\n      <button className={nameOfClass} type={typeOfButton} onClick={onClickFunc}>\r\n        {holderText}\r\n      </button>\r\n    )\r\n  };\r\n};\r\n\r\nButton.propTypes = {\r\n  onClickFunc: PropTypes.func,\r\n  holderText: PropTypes.string,\r\n  typeOfButton: PropTypes.string,\r\n  nameOfClass: PropTypes.string,\r\n};\r\n\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sortButton\":\"Button_sortButton__2xrgb\",\"deleteButton\":\"Button_deleteButton__32a5-\",\"backToFilmListButton\":\"Button_backToFilmListButton__XGy09\",\"addFilmFormButton\":\"Button_addFilmFormButton__1vNvk\"};","import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://powerful-peak-59605.herokuapp.com/films/';\r\n\r\nexport const getAllFilms = () => axios.get(BASE_URL);\r\n\r\nexport const getFilmWithId = id => axios.get(BASE_URL + `${id}`);\r\n\r\nexport const addNewFilm = film => axios.post(BASE_URL, film);\r\n\r\nexport const deleteFilm = id => axios.delete(BASE_URL + `${id}`);\r\n"],"sourceRoot":""}